@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";
    var nameSortParam = ViewData["NameSortParm"] as string;
    var ageSortParam = ViewData["AgeSortParm"] as string;
}

@{
    var vDataMessage = ViewData["Message"] as string; // Requires Casting - StronglyTyped

}

@* <div class="alert alert-success">@ViewData["Message"]</div> *@

@if(TempData["Message"] is not null)
{
    <div class="successMessage alert alert-success">
        @TempData["Message"]
    </div>
}

<div class="alert alert-primary">@ViewBag.Message</div>
<a class="btn btn-primary" asp-action="Create">Create New Employee</a>

@if (Model.Count() > 0)
{
    <h1>All Employees</h1>
    <br />

    <div class="m-2">
        <form asp-action="Index" class="row offset-2" enctype="multipart/form-data">
            <div class="col-8 pl-0">
                <input type="text" name="SearchValue" placeholder="Employee's Name " class="form-control" />
            </div>
            <div class="col-4 pr-0">
                <input type="submit" value="Search" class="btn btn-outline-info"/>
            </div>
        </form>
    </div>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(d => d.Image)</td>
                <td>
                    <a asp-action="Index" name="sortOrder" asp-route-sortOrder="@nameSortParam">@Html.DisplayNameFor(d => d.Name)</a>
                </td>
                <td>@Html.DisplayNameFor(d => d.Address)</td>
                <td>
                    <a asp-action="Index" name="sortOrder" asp-route-sortOrder="@ageSortParam">@Html.DisplayNameFor(d => d.Age)</a>
                </td>
                <td>@Html.DisplayNameFor(d => d.Salary)</td>
                <td>@Html.DisplayNameFor(d => d.Department)</td>
                <td>@Html.DisplayNameFor(d => d.Email)</td>
                <td>@Html.DisplayNameFor(d => d.PhoneNumber)</td>
                <td>@Html.DisplayNameFor(d => d.IsActive)</td>
                <td>@Html.DisplayNameFor(d => d.HireDate)</td>
@*                 <td>@Html.DisplayNameFor(d => d.CreatedAt)</td> *@
                <td>Details</td>
                <td>Update</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>
                        <img onclick="enlargeEmployeeImage()" class="employeeImage rounded-circle" height="60" width="60" src="~/Files/Images/@employee.ImageName" alt="@employee.ImageName" />
                    </td>
                    <td>@employee.Name</td>
                    <td>@employee.Address</td>
                    <td>@employee.Age</td>
                    <td>@Html.DisplayFor(e => employee.Salary)</td>
                    <td>@Html.DisplayFor(e => employee.Department.Name)</td>
                    <td>@Html.DisplayFor(e => employee.Email)</td>
                    <td>@employee.PhoneNumber</td>
                    <td>
                        @if (employee.IsActive)
                        {
                            <i class="fa-solid fa-circle" style="color: green"></i>
                        }
                        else
                        {
                            <i class="fa-solid fa-circle" style="color: red"></i>
                        }
                    </td>
                    <td>@employee.HireDate</td>
@*                     <td>@employee.CreatedAt</td>
 *@                    <partial name="_ButtonsPartialView" model="@employee.Id" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-5 alert alert-warning">
        <h4>There is no employees !!!</h4>
    </div>
}
@section Scripts {
    <script src="~/js/site.js"></script>
}